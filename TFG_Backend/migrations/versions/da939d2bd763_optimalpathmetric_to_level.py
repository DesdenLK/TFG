"""OptimalPathMetric to Level

Revision ID: da939d2bd763
Revises: 7bc7655cdb95
Create Date: 2025-05-12 18:23:41.894593

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'da939d2bd763'
down_revision: Union[str, None] = '7bc7655cdb95'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.add_column('terrain_levels', sa.Column(
        'optimal_total3D_distance', sa.Float(), nullable=False, server_default=sa.text('0.0')))
    op.add_column('terrain_levels', sa.Column(
        'optimal_total2D_distance', sa.Float(), nullable=False, server_default=sa.text('0.0')))
    op.add_column('terrain_levels', sa.Column(
        'optimal_total_slope', sa.Float(), nullable=False, server_default=sa.text('0.0')))
    op.add_column('terrain_levels', sa.Column(
        'optimal_total_positive_slope', sa.Float(), nullable=False, server_default=sa.text('0.0')))
    op.add_column('terrain_levels', sa.Column(
        'optimal_total_negative_slope', sa.Float(), nullable=False, server_default=sa.text('0.0')))
    op.add_column('terrain_levels', sa.Column(
        'optimal_metabolic_cost', sa.Float(), nullable=False, server_default=sa.text('0.0')))

    # Optionally remove server default after backfilling existing rows
    op.alter_column('terrain_levels', 'optimal_total3D_distance', server_default=None)
    op.alter_column('terrain_levels', 'optimal_total2D_distance', server_default=None)
    op.alter_column('terrain_levels', 'optimal_total_slope', server_default=None)
    op.alter_column('terrain_levels', 'optimal_total_positive_slope', server_default=None)
    op.alter_column('terrain_levels', 'optimal_total_negative_slope', server_default=None)
    op.alter_column('terrain_levels', 'optimal_metabolic_cost', server_default=None)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('terrain_levels', 'optimal_metabolic_cost')
    op.drop_column('terrain_levels', 'optimal_total_negative_slope')
    op.drop_column('terrain_levels', 'optimal_total_positive_slope')
    op.drop_column('terrain_levels', 'optimal_total_slope')
    op.drop_column('terrain_levels', 'optimal_total2D_distance')
    op.drop_column('terrain_levels', 'optimal_total3D_distance')
    # ### end Alembic commands ###
